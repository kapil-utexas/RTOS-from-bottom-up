


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ; OS.s: low-level OS commands, written in assembly      
                                        */
    3 00000000         ; Runs on LM4F120/TM4C123
    4 00000000         ; OS functions.
    5 00000000         ; Ramon Villar, Kapil
    6 00000000         ; February, 9, 2016
    7 00000000         
    8 00000000         
    9 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   10 00000000                 THUMB
   11 00000000                 REQUIRE8
   12 00000000                 PRESERVE8
   13 00000000         
   14 00000000                 EXTERN           RunPt       ; currently running
                                                             thread
   15 00000000                 EXTERN           PF3Address
   16 00000000                 EXTERN           traverseSleep
   17 00000000                 EXTERN           switched
   18 00000000                 EXTERN           nextBeforeSwitch
   19 00000000                 EXPORT           OS_DisableInterrupts
   20 00000000                 EXPORT           OS_EnableInterrupts
   21 00000000                 EXPORT           PendSV_Handler
   22 00000000                 EXPORT           SysTick_Handler
   23 00000000                 EXPORT           StartOS
   24 00000000         
   25 00000000         
   26 00000000         
   27 00000000         
   28 00000000         
   29 00000000         OS_DisableInterrupts
   30 00000000 B672            CPSID            I
   31 00000002 4770            BX               LR
   32 00000004         
   33 00000004         
   34 00000004         OS_EnableInterrupts
   35 00000004 B662            CPSIE            I
   36 00000006 4770            BX               LR
   37 00000008         
   38 00000008         StartOS
   39 00000008 4820            LDR              R0, =RunPt
   40 0000000A 6802            LDR              R2, [R0]
   41 0000000C F8D2 D000       LDR              SP, [R2]    ;load localSP
   42 00000010 E8BD 0FF0       POP              {R4-R11}
   43 00000014 BC0F            POP              {R0-R3}
   44 00000016 F85D CB04       POP              {R12}
   45 0000001A F85D EB04       POP              {LR}        ;trash LR
   46 0000001E F85D EB04       POP              {LR}        ;PC on stack. the o
                                                            nly register that i
                                                            s not trash. points
                                                             to function that w
                                                            e want to run
   47 00000022 BC02            POP              {R1}        ;discards last one 
                                                            PSR
   48 00000024 B662            CPSIE            I
   49 00000026 4770            BX               LR          ;LR contains the PC
                                                             we want to return 



ARM Macro Assembler    Page 2 


                                                            to
   50 00000028         
   51 00000028         
   52 00000028         
   53 00000028         PendSV_Handler                       ; 1) Saves R0-R3,R1
                                                            2,LR,PC,PSR
   54 00000028 B672            CPSID            I
   55 0000002A E92D 0FF0       PUSH{R4-R11}                 ;push remaining reg
                                                            isters
   56 0000002E 4817            LDR              R0, =RunPt  ;old run pointer
   57 00000030 6801            LDR              R1, [R0]    ;now R1 points the 
                                                            the current TCB run
                                                            ning
   58 00000032         ;this means R1 = TCB.localSP  
   59 00000032 F8C1 D000       STR              SP, [R1]    ;store stack into l
                                                            ocal stack pointer 
                                                            of TCB
   60 00000036         ;need to check if we went to sleep or killed 
   61 00000036 4A16            LDR              R2, =switched ;8bit variable
   62 00000038 7813            LDRB             R3, [R2]    ;loadvalue of flag
   63 0000003A 2B00            CMP              R3, #0
   64 0000003C D100            BNE              Switch_Routine
   65 0000003E D008            BEQ              NoSwitch_Routine
   66 00000040         Switch_Routine
   67 00000040 F04F 0300       MOV              R3,#0
   68 00000044 7013            STRB             R3, [R2]    ;clear the flag
   69 00000046 4913            LDR              R1, =nextBeforeSwitch
   70 00000048 6809            LDR              R1, [R1]    ;now points to tcb 
                                                            that we want to run
                                                            
   71 0000004A 6001            STR              R1, [R0]    ;update runPT
   72 0000004C F8D1 D000       LDR              SP, [R1]
   73 00000050 E003            B                END_ROUTINE
   74 00000052         NoSwitch_Routine
   75 00000052 6849            LDR              R1, [R1,#4] ;load nextpt
   76 00000054 6001            STR              R1, [R0]    ;update RunPt
   77 00000056 F8D1 D000       LDR              SP, [R1]    ;R1 points to the f
                                                            irst element of the
                                                             struct we want to 
                                                            switch to
   78 0000005A         END_ROUTINE
   79 0000005A E8BD 0FF0       POP              {R4-R11}    ;pop remainining re
                                                            gisters
   80 0000005E B662            CPSIE            I
   81 00000060 4770            BX               LR
   82 00000062         
   83 00000062         
   84 00000062         SysTick_Handler                      ; 1) Saves R0-R3,R1
                                                            2,LR,PC,PSR
   85 00000062 B672            CPSID            I
   86 00000064 E92D 0FF0       PUSH{R4-R11}                 ;push remaining reg
                                                            isters
   87 00000068 4808            LDR              R0, =RunPt  ;old run pointer
   88 0000006A 6801            LDR              R1, [R0]    ;now R1 points the 
                                                            the current TCB run
                                                            ning
   89 0000006C         ;this means R1 = TCB.localSP  
   90 0000006C F8C1 D000       STR              SP, [R1]    ;store stack into l
                                                            ocal stack pointer 



ARM Macro Assembler    Page 3 


                                                            of TCB
   91 00000070         ;added
   92 00000070 B503            PUSH{R0-R1,      LR}
   93 00000072 F7FF FFFE       BL               traverseSleep
   94 00000076 E8BD 4003       POP{R0-R1,       LR}
   95 0000007A         ;added
   96 0000007A 6849            LDR              R1, [R1,#4] ;load nextpt
   97 0000007C 6001            STR              R1, [R0]    ;update RunPt
   98 0000007E F8D1 D000       LDR              SP, [R1]    ;R1 points to the f
                                                            irst element of the
                                                             struct we want to 
                                                            switch to
   99 00000082 E8BD 0FF0       POP              {R4-R11}    ;pop remainining re
                                                            gisters
  100 00000086 B662            CPSIE            I
  101 00000088 4770            BX               LR
  102 0000008A         
  103 0000008A         
  104 0000008A 00 00           ALIGN
  105 0000008C                 END
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\osasm.
d -o.\osasm.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --predefine="__EVAL SETA 1" --list=.\osasm.lst OSasm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 9 in file OSasm.s
   Uses
      None
Comment: .text unused
END_ROUTINE 0000005A

Symbol: END_ROUTINE
   Definitions
      At line 78 in file OSasm.s
   Uses
      At line 73 in file OSasm.s
Comment: END_ROUTINE used once
NoSwitch_Routine 00000052

Symbol: NoSwitch_Routine
   Definitions
      At line 74 in file OSasm.s
   Uses
      At line 65 in file OSasm.s
Comment: NoSwitch_Routine used once
OS_DisableInterrupts 00000000

Symbol: OS_DisableInterrupts
   Definitions
      At line 29 in file OSasm.s
   Uses
      At line 19 in file OSasm.s
Comment: OS_DisableInterrupts used once
OS_EnableInterrupts 00000004

Symbol: OS_EnableInterrupts
   Definitions
      At line 34 in file OSasm.s
   Uses
      At line 20 in file OSasm.s
Comment: OS_EnableInterrupts used once
PendSV_Handler 00000028

Symbol: PendSV_Handler
   Definitions
      At line 53 in file OSasm.s
   Uses
      At line 21 in file OSasm.s
Comment: PendSV_Handler used once
StartOS 00000008

Symbol: StartOS
   Definitions
      At line 38 in file OSasm.s
   Uses
      At line 23 in file OSasm.s
Comment: StartOS used once
Switch_Routine 00000040

Symbol: Switch_Routine



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 66 in file OSasm.s
   Uses
      At line 64 in file OSasm.s
Comment: Switch_Routine used once
SysTick_Handler 00000062

Symbol: SysTick_Handler
   Definitions
      At line 84 in file OSasm.s
   Uses
      At line 22 in file OSasm.s
Comment: SysTick_Handler used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

PF3Address 00000000

Symbol: PF3Address
   Definitions
      At line 15 in file OSasm.s
   Uses
      None
Comment: PF3Address unused
RunPt 00000000

Symbol: RunPt
   Definitions
      At line 14 in file OSasm.s
   Uses
      At line 39 in file OSasm.s
      At line 56 in file OSasm.s
      At line 87 in file OSasm.s

nextBeforeSwitch 00000000

Symbol: nextBeforeSwitch
   Definitions
      At line 18 in file OSasm.s
   Uses
      At line 69 in file OSasm.s
Comment: nextBeforeSwitch used once
switched 00000000

Symbol: switched
   Definitions
      At line 17 in file OSasm.s
   Uses
      At line 61 in file OSasm.s
Comment: switched used once
traverseSleep 00000000

Symbol: traverseSleep
   Definitions
      At line 16 in file OSasm.s
   Uses
      At line 93 in file OSasm.s
Comment: traverseSleep used once
5 symbols
347 symbols in table
