


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ; OS.s: low-level OS commands, written in assembly      
                                        */
    3 00000000         ; Runs on LM4F120/TM4C123
    4 00000000         ; OS functions.
    5 00000000         ; Ramon Villar, Kapil
    6 00000000         ; February, 9, 2016
    7 00000000         
    8 00000000         
    9 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   10 00000000                 THUMB
   11 00000000                 REQUIRE8
   12 00000000                 PRESERVE8
   13 00000000         
   14 00000000                 EXTERN           RunPt       ; currently running
                                                             thread
   15 00000000                 EXTERN           traverseSleep
   16 00000000                 EXTERN           switched
   17 00000000                 EXTERN           nextBeforeSwitch
   18 00000000                 EXTERN           higherPriorityAdded
   19 00000000                 EXTERN           SchedulerPt
   20 00000000                 EXPORT           OS_DisableInterrupts
   21 00000000                 EXPORT           OS_EnableInterrupts
   22 00000000                 EXPORT           PendSV_Handler
   23 00000000                 EXPORT           SysTick_Handler
   24 00000000                 EXPORT           StartOS
   25 00000000         
   26 00000000         
   27 00000000         
   28 00000000         
   29 00000000         
   30 00000000         OS_DisableInterrupts
   31 00000000 B672            CPSID            I
   32 00000002 4770            BX               LR
   33 00000004         
   34 00000004         
   35 00000004         OS_EnableInterrupts
   36 00000004 B662            CPSIE            I
   37 00000006 4770            BX               LR
   38 00000008         
   39 00000008         StartOS
   40 00000008 4820            LDR              R0, =RunPt
   41 0000000A 6802            LDR              R2, [R0]
   42 0000000C F8D2 D000       LDR              SP, [R2]    ;load localSP
   43 00000010 E8BD 0FF0       POP              {R4-R11}
   44 00000014 BC0F            POP              {R0-R3}
   45 00000016 F85D CB04       POP              {R12}
   46 0000001A F85D EB04       POP              {LR}        ;trash LR
   47 0000001E F85D EB04       POP              {LR}        ;PC on stack. the o
                                                            nly register that i
                                                            s not trash. points
                                                             to function that w
                                                            e want to run
   48 00000022 BC02            POP              {R1}        ;discards last one 
                                                            PSR
   49 00000024 B662            CPSIE            I
   50 00000026 4770            BX               LR          ;LR contains the PC



ARM Macro Assembler    Page 2 


                                                             we want to return 
                                                            to
   51 00000028         
   52 00000028         
   53 00000028         
   54 00000028         PendSV_Handler                       ; 1) Saves R0-R3,R1
                                                            2,LR,PC,PSR
   55 00000028 B672            CPSID            I
   56 0000002A E92D 0FF0       PUSH{R4-R11}                 ;push remaining reg
                                                            isters
   57 0000002E 4817            LDR              R0, =RunPt  ;old run pointer
   58 00000030 6801            LDR              R1, [R0]    ;now R1 points the 
                                                            the current TCB run
                                                            ning
   59 00000032         ;this means R1 = TCB.localSP  
   60 00000032 F8C1 D000       STR              SP, [R1]    ;store stack into l
                                                            ocal stack pointer 
                                                            of TCB
   61 00000036         ;need to check if we went to sleep or killed 
   62 00000036 4A16            LDR              R2, =switched ;8bit variable
   63 00000038 7813            LDRB             R3, [R2]    ;loadvalue of flag
   64 0000003A 2B00            CMP              R3, #0
   65 0000003C D10D            BNE              Switch_Routine
   66 0000003E 4A15            LDR              R2, =higherPriorityAdded
   67 00000040 7813            LDRB             R3, [R2]    ;load value of flag
                                                            ... if 1, a higher 
                                                            priority was added 
                                                            and need to update 
                                                            runpt to beginning 
                                                            of list
   68 00000042 2B00            CMP              R3, #0
   69 00000044 D100            BNE              Higher_Priority_Switch
   70 00000046 D011            BEQ              Normal_Context_Switch
   71 00000048         Higher_Priority_Switch
   72 00000048 F04F 0300       MOV              R3,#0       ;constant to clear 
                                                            the flag
   73 0000004C 7013            STRB             R3,[R2]     ;clear the flag, fl
                                                            ag was 1
   74 0000004E 4912            LDR              R1, =SchedulerPt
   75 00000050 6809            LDR              R1, [R1]    ;R1 now points to h
                                                            igher priority thre
                                                            ad
   76 00000052 6001            STR              R1, [R0]    ;update runPt
   77 00000054 F8D1 D000       LDR              SP, [R1]    ;localSp to SP
   78 00000058 E00C            B                END_ROUTINE
   79 0000005A         Switch_Routine                       ;used for kill and 
                                                            sleep
   80 0000005A F04F 0300       MOV              R3,#0
   81 0000005E 7013            STRB             R3, [R2]    ;clear the flag
   82 00000060 490E            LDR              R1, =nextBeforeSwitch
   83 00000062 6809            LDR              R1, [R1]    ;now points to tcb 
                                                            that we want to run
                                                            
   84 00000064 6001            STR              R1, [R0]    ;update runPT
   85 00000066 F8D1 D000       LDR              SP, [R1]
   86 0000006A E003            B                END_ROUTINE
   87 0000006C         Normal_Context_Switch
   88 0000006C 6849            LDR              R1, [R1,#4] ;load nextpt
   89 0000006E 6001            STR              R1, [R0]    ;update RunPt



ARM Macro Assembler    Page 3 


   90 00000070 F8D1 D000       LDR              SP, [R1]    ;R1 points to the f
                                                            irst element of the
                                                             struct we want to 
                                                            switch to
   91 00000074         END_ROUTINE
   92 00000074 E8BD 0FF0       POP              {R4-R11}    ;pop remainining re
                                                            gisters
   93 00000078 B662            CPSIE            I
   94 0000007A 4770            BX               LR
   95 0000007C         
   96 0000007C         
   97 0000007C         SysTick_Handler                      ; 1) Saves R0-R3,R1
                                                            2,LR,PC,PSR
   98 0000007C B672            CPSID            I
   99 0000007E         ;PUSH{R4-R11} ;push remaining registers
  100 0000007E         ;LDR R0, =RunPt ;old run pointer
  101 0000007E         ;LDR R1, [R0] ;now R1 points the the current TCB running
                       
  102 0000007E         ;this means R1 = TCB.localSP  
  103 0000007E         ;STR SP, [R1] ;store stack into local stack pointer of T
                       CB
  104 0000007E         ;added
  105 0000007E B503            PUSH{R0-R1,      LR}
  106 00000080 F7FF FFFE       BL               traverseSleep
  107 00000084 E8BD 4003       POP{R0-R1,       LR}
  108 00000088         ;added
  109 00000088         ;LDR R1, [R1,#4] ;load nextpt
  110 00000088         ;STR R1, [R0] ;update RunPt
  111 00000088         ;LDR SP, [R1] ;R1 points to the first element of the str
                       uct we want to switch to
  112 00000088         ;POP {R4-R11} ;pop remainining registers
  113 00000088 B662            CPSIE            I
  114 0000008A 4770            BX               LR
  115 0000008C         
  116 0000008C         
  117 0000008C                 ALIGN
  118 0000008C                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\osasm.
d -o.\osasm.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --list=.\osasm.lst OSasm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 9 in file OSasm.s
   Uses
      None
Comment: .text unused
END_ROUTINE 00000074

Symbol: END_ROUTINE
   Definitions
      At line 91 in file OSasm.s
   Uses
      At line 78 in file OSasm.s
      At line 86 in file OSasm.s

Higher_Priority_Switch 00000048

Symbol: Higher_Priority_Switch
   Definitions
      At line 71 in file OSasm.s
   Uses
      At line 69 in file OSasm.s
Comment: Higher_Priority_Switch used once
Normal_Context_Switch 0000006C

Symbol: Normal_Context_Switch
   Definitions
      At line 87 in file OSasm.s
   Uses
      At line 70 in file OSasm.s
Comment: Normal_Context_Switch used once
OS_DisableInterrupts 00000000

Symbol: OS_DisableInterrupts
   Definitions
      At line 30 in file OSasm.s
   Uses
      At line 20 in file OSasm.s
Comment: OS_DisableInterrupts used once
OS_EnableInterrupts 00000004

Symbol: OS_EnableInterrupts
   Definitions
      At line 35 in file OSasm.s
   Uses
      At line 21 in file OSasm.s
Comment: OS_EnableInterrupts used once
PendSV_Handler 00000028

Symbol: PendSV_Handler
   Definitions
      At line 54 in file OSasm.s
   Uses
      At line 22 in file OSasm.s
Comment: PendSV_Handler used once
StartOS 00000008




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: StartOS
   Definitions
      At line 39 in file OSasm.s
   Uses
      At line 24 in file OSasm.s
Comment: StartOS used once
Switch_Routine 0000005A

Symbol: Switch_Routine
   Definitions
      At line 79 in file OSasm.s
   Uses
      At line 65 in file OSasm.s
Comment: Switch_Routine used once
SysTick_Handler 0000007C

Symbol: SysTick_Handler
   Definitions
      At line 97 in file OSasm.s
   Uses
      At line 23 in file OSasm.s
Comment: SysTick_Handler used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

RunPt 00000000

Symbol: RunPt
   Definitions
      At line 14 in file OSasm.s
   Uses
      At line 40 in file OSasm.s
      At line 57 in file OSasm.s

SchedulerPt 00000000

Symbol: SchedulerPt
   Definitions
      At line 19 in file OSasm.s
   Uses
      At line 74 in file OSasm.s
Comment: SchedulerPt used once
higherPriorityAdded 00000000

Symbol: higherPriorityAdded
   Definitions
      At line 18 in file OSasm.s
   Uses
      At line 66 in file OSasm.s
Comment: higherPriorityAdded used once
nextBeforeSwitch 00000000

Symbol: nextBeforeSwitch
   Definitions
      At line 17 in file OSasm.s
   Uses
      At line 82 in file OSasm.s
Comment: nextBeforeSwitch used once
switched 00000000

Symbol: switched
   Definitions
      At line 16 in file OSasm.s
   Uses
      At line 62 in file OSasm.s
Comment: switched used once
traverseSleep 00000000

Symbol: traverseSleep
   Definitions
      At line 15 in file OSasm.s
   Uses
      At line 106 in file OSasm.s
Comment: traverseSleep used once
6 symbols
348 symbols in table
