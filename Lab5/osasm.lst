


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ; OS.s: low-level OS commands, written in assembly      
                                        */
    3 00000000         ; Runs on LM4F120/TM4C123
    4 00000000         ; OS functions.
    5 00000000         ; Ramon Villar, Kapil
    6 00000000         ; February, 9, 2016
    7 00000000         
    8 00000000         
    9 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   10 00000000                 THUMB
   11 00000000                 REQUIRE8
   12 00000000                 PRESERVE8
   13 00000000                 EXTERN           OS_Id
   14 00000000                 EXTERN           OS_Kill
   15 00000000                 EXTERN           OS_Sleep
   16 00000000                 EXTERN           OS_Time
   17 00000000                 EXTERN           OS_AddThread
   18 00000000                 EXTERN           processPool
   19 00000000                 EXTERN           RunPt       ; currently running
                                                             thread
   20 00000000                 EXTERN           traverseSleep
   21 00000000                 EXTERN           switched
   22 00000000                 EXTERN           nextBeforeSwitch
   23 00000000                 EXTERN           getProcessIdOfRunningThread
   24 00000000                 EXTERN           higherPriorityAdded
   25 00000000                 EXTERN           SchedulerPt
   26 00000000                 EXTERN           getNewR9
   27 00000000                 EXTERN           currentProcess
   28 00000000                 EXPORT           OS_DisableInterrupts
   29 00000000                 EXPORT           OS_EnableInterrupts
   30 00000000                 EXPORT           PendSV_Handler
   31 00000000                 EXPORT           SysTick_Handler
   32 00000000                 EXPORT           StartOS
   33 00000000                 EXPORT           SVC_Handler
   34 00000000         
   35 00000000         
   36 00000000         
   37 00000000         
   38 00000000         OS_DisableInterrupts
   39 00000000 B672            CPSID            I
   40 00000002 4770            BX               LR
   41 00000004         
   42 00000004         
   43 00000004         OS_EnableInterrupts
   44 00000004 B662            CPSIE            I
   45 00000006 4770            BX               LR
   46 00000008         
   47 00000008         StartOS
   48 00000008 4842            LDR              R0, =RunPt
   49 0000000A 6802            LDR              R2, [R0]
   50 0000000C F8D2 D000       LDR              SP, [R2]    ;load localSP
   51 00000010 E8BD 0FF0       POP              {R4-R11}
   52 00000014 BC0F            POP              {R0-R3}
   53 00000016 F85D CB04       POP              {R12}
   54 0000001A F85D EB04       POP              {LR}        ;trash LR
   55 0000001E F85D EB04       POP              {LR}        ;PC on stack. the o



ARM Macro Assembler    Page 2 


                                                            nly register that i
                                                            s not trash. points
                                                             to function that w
                                                            e want to run
   56 00000022 BC02            POP              {R1}        ;discards last one 
                                                            PSR
   57 00000024 B662            CPSIE            I
   58 00000026 4770            BX               LR          ;LR contains the PC
                                                             we want to return 
                                                            to
   59 00000028         
   60 00000028         
   61 00000028         
   62 00000028         PendSV_Handler                       ; 1) Saves R0-R3,R1
                                                            2,LR,PC,PSR
   63 00000028 B672            CPSID            I
   64 0000002A E92D 0FF0       PUSH{R4-R11}                 ;push remaining reg
                                                            isters
   65 0000002E 4839            LDR              R0, =RunPt  ;old run pointer
   66 00000030 6801            LDR              R1, [R0]    ;now R1 points the 
                                                            the current TCB run
                                                            ning
   67 00000032         ;this means R1 = TCB.localSP  
   68 00000032 F8C1 D000       STR              SP, [R1]    ;store stack into l
                                                            ocal stack pointer 
                                                            of TCB
   69 00000036         ;need to check if we went to sleep or killed 
   70 00000036 4A38            LDR              R2, =switched ;8bit variable
   71 00000038 7813            LDRB             R3, [R2]    ;loadvalue of flag
   72 0000003A 2B00            CMP              R3, #0
   73 0000003C D10D            BNE              Switch_Routine
   74 0000003E 4A37            LDR              R2, =higherPriorityAdded
   75 00000040 7813            LDRB             R3, [R2]    ;load value of flag
                                                            ... if 1, a higher 
                                                            priority was added 
                                                            and need to update 
                                                            runpt to beginning 
                                                            of list
   76 00000042 2B00            CMP              R3, #0
   77 00000044 D100            BNE              Higher_Priority_Switch
   78 00000046 D011            BEQ              Normal_Context_Switch
   79 00000048         Higher_Priority_Switch
   80 00000048 F04F 0300       MOV              R3,#0       ;constant to clear 
                                                            the flag
   81 0000004C 7013            STRB             R3,[R2]     ;clear the flag, fl
                                                            ag was 1
   82 0000004E 4934            LDR              R1, =SchedulerPt
   83 00000050 6809            LDR              R1, [R1]    ;R1 now points to h
                                                            igher priority thre
                                                            ad
   84 00000052 6001            STR              R1, [R0]    ;update runPt
   85 00000054 F8D1 D000       LDR              SP, [R1]    ;localSp to SP
   86 00000058 E00C            B                END_ROUTINE
   87 0000005A         Switch_Routine                       ;used for kill and 
                                                            sleep
   88 0000005A F04F 0300       MOV              R3,#0
   89 0000005E 7013            STRB             R3, [R2]    ;clear the flag
   90 00000060 4930            LDR              R1, =nextBeforeSwitch
   91 00000062 6809            LDR              R1, [R1]    ;now points to tcb 



ARM Macro Assembler    Page 3 


                                                            that we want to run
                                                            
   92 00000064 6001            STR              R1, [R0]    ;update runPT
   93 00000066 F8D1 D000       LDR              SP, [R1]
   94 0000006A E003            B                END_ROUTINE
   95 0000006C         Normal_Context_Switch
   96 0000006C 6849            LDR              R1, [R1,#4] ;load nextpt
   97 0000006E 6001            STR              R1, [R0]    ;update RunPt
   98 00000070 F8D1 D000       LDR              SP, [R1]    ;R1 points to the f
                                                            irst element of the
                                                             struct we want to 
                                                            switch to
   99 00000074         END_ROUTINE
  100 00000074 E8BD 0FF0       POP              {R4-R11}    ;pop remainining re
                                                            gisters
  101 00000078 E92D 01F0       PUSH{R4-R8}
  102 0000007C 4C25            LDR              R4, =RunPt
  103 0000007E 6824            LDR              R4,[R4]
  104 00000080         ;LDR R5, [R4,#540] ;load Process ID 
  105 00000080 B501            PUSH             {R0, LR}
  106 00000082 F7FF FFFE       BL               getProcessIdOfRunningThread
  107 00000086 4605            MOV              R5, R0
  108 00000088 E8BD 4001       POP              {R0,LR}
  109 0000008C B440            PUSH{R6}
  110 0000008E 4E26            LDR              R6, =currentProcess ;CHECK UIF 
                                                            WE NEED TO LDR AGAI
                                                            N
  111 00000090 6035            STR              R5, [R6]
  112 00000092 BC40            POP{R6}
  113 00000094         ;LDR R6, =processPool
  114 00000094         ;LDR R6, [R6]
  115 00000094         ;MOV R8, #17
  116 00000094         ;MUL R7, R5, R8 ;17 is size of PCB
  117 00000094         ;ADD R7, R7, #8 ;add offset for data segment
  118 00000094         ;LDR R7, [R6,R7]
  119 00000094         ;LDR R7,[R7]
  120 00000094 B501            PUSH{R0,LR}
  121 00000096 F7FF FFFE       BL               getNewR9
  122 0000009A 4681            MOV              R9, R0      ;update R9
  123 0000009C E8BD 4001       POP{R0,LR}
  124 000000A0 E8BD 01F0       POP{R4-R8}
  125 000000A4         ;need to set R9
  126 000000A4 B662            CPSIE            I
  127 000000A6 4770            BX               LR
  128 000000A8         
  129 000000A8         
  130 000000A8         SVC_Handler
  131 000000A8 B672            CPSID            I
  132 000000AA F8DD C018       LDR              R12, [SP,#24]
  133 000000AE F83C CC02       LDRH             R12, [R12,#-2]
  134 000000B2 F42C 4C7F       BIC              R12, #0xFF00
  135 000000B6 E89D 000F       LDM              SP, {R0-R3}
  136 000000BA B500            PUSH{LR}
  137 000000BC F1BC 0F00       CMP              R12, #0
  138 000000C0 D00B            BEQ              OS_Id_Handler
  139 000000C2 F1BC 0F01       CMP              R12, #1
  140 000000C6 D00B            BEQ              OS_Kill_Handler
  141 000000C8 F1BC 0F02       CMP              R12, #2
  142 000000CC D00B            BEQ              OS_Sleep_Handler



ARM Macro Assembler    Page 4 


  143 000000CE F1BC 0F03       CMP              R12, #3
  144 000000D2 D00B            BEQ              OS_Time_Handler
  145 000000D4 F1BC 0F04       CMP              R12, #4
  146 000000D8 D00B            BEQ              OS_AddThread_Handler
  147 000000DA         OS_Id_Handler
  148 000000DA F7FF FFFE       BL               OS_Id
  149 000000DE E00B            B                Finished
  150 000000E0         OS_Kill_Handler
  151 000000E0 F7FF FFFE       BL               OS_Kill
  152 000000E4 E008            B                Finished
  153 000000E6         OS_Sleep_Handler
  154 000000E6 F7FF FFFE       BL               OS_Sleep
  155 000000EA E005            B                Finished
  156 000000EC         OS_Time_Handler
  157 000000EC F7FF FFFE       BL               OS_Time
  158 000000F0 E002            B                Finished
  159 000000F2         OS_AddThread_Handler
  160 000000F2 F7FF FFFE       BL               OS_AddThread
  161 000000F6 E7FF            B                Finished
  162 000000F8         Finished
  163 000000F8 F85D EB04       POP{LR}
  164 000000FC 9000            STR              R0,[SP]
  165 000000FE B662            CPSIE            I
  166 00000100 4770            BX               LR
  167 00000102         
  168 00000102         
  169 00000102         SysTick_Handler                      ; 1) Saves R0-R3,R1
                                                            2,LR,PC,PSR
  170 00000102 B672            CPSID            I
  171 00000104         ;PUSH{R4-R11} ;push remaining registers
  172 00000104         ;LDR R0, =RunPt ;old run pointer
  173 00000104         ;LDR R1, [R0] ;now R1 points the the current TCB running
                       
  174 00000104         ;this means R1 = TCB.localSP  
  175 00000104         ;STR SP, [R1] ;store stack into local stack pointer of T
                       CB
  176 00000104         ;added
  177 00000104 B503            PUSH{R0-R1,      LR}
  178 00000106 F7FF FFFE       BL               traverseSleep
  179 0000010A E8BD 4003       POP{R0-R1,       LR}
  180 0000010E         ;added
  181 0000010E         ;LDR R1, [R1,#4] ;load nextpt
  182 0000010E         ;STR R1, [R0] ;update RunPt
  183 0000010E         ;LDR SP, [R1] ;R1 points to the first element of the str
                       uct we want to switch to
  184 0000010E         ;POP {R4-R11} ;pop remainining registers
  185 0000010E B662            CPSIE            I
  186 00000110 4770            BX               LR
  187 00000112         
  188 00000112         
  189 00000112 00 00           ALIGN
  190 00000114                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\osasm.



ARM Macro Assembler    Page 5 


d -o.\osasm.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --list=.\osasm.lst OSasm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 9 in file OSasm.s
   Uses
      None
Comment: .text unused
END_ROUTINE 00000074

Symbol: END_ROUTINE
   Definitions
      At line 99 in file OSasm.s
   Uses
      At line 86 in file OSasm.s
      At line 94 in file OSasm.s

Finished 000000F8

Symbol: Finished
   Definitions
      At line 162 in file OSasm.s
   Uses
      At line 149 in file OSasm.s
      At line 152 in file OSasm.s
      At line 155 in file OSasm.s
      At line 158 in file OSasm.s
      At line 161 in file OSasm.s

Higher_Priority_Switch 00000048

Symbol: Higher_Priority_Switch
   Definitions
      At line 79 in file OSasm.s
   Uses
      At line 77 in file OSasm.s
Comment: Higher_Priority_Switch used once
Normal_Context_Switch 0000006C

Symbol: Normal_Context_Switch
   Definitions
      At line 95 in file OSasm.s
   Uses
      At line 78 in file OSasm.s
Comment: Normal_Context_Switch used once
OS_AddThread_Handler 000000F2

Symbol: OS_AddThread_Handler
   Definitions
      At line 159 in file OSasm.s
   Uses
      At line 146 in file OSasm.s
Comment: OS_AddThread_Handler used once
OS_DisableInterrupts 00000000

Symbol: OS_DisableInterrupts
   Definitions
      At line 38 in file OSasm.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 28 in file OSasm.s
Comment: OS_DisableInterrupts used once
OS_EnableInterrupts 00000004

Symbol: OS_EnableInterrupts
   Definitions
      At line 43 in file OSasm.s
   Uses
      At line 29 in file OSasm.s
Comment: OS_EnableInterrupts used once
OS_Id_Handler 000000DA

Symbol: OS_Id_Handler
   Definitions
      At line 147 in file OSasm.s
   Uses
      At line 138 in file OSasm.s
Comment: OS_Id_Handler used once
OS_Kill_Handler 000000E0

Symbol: OS_Kill_Handler
   Definitions
      At line 150 in file OSasm.s
   Uses
      At line 140 in file OSasm.s
Comment: OS_Kill_Handler used once
OS_Sleep_Handler 000000E6

Symbol: OS_Sleep_Handler
   Definitions
      At line 153 in file OSasm.s
   Uses
      At line 142 in file OSasm.s
Comment: OS_Sleep_Handler used once
OS_Time_Handler 000000EC

Symbol: OS_Time_Handler
   Definitions
      At line 156 in file OSasm.s
   Uses
      At line 144 in file OSasm.s
Comment: OS_Time_Handler used once
PendSV_Handler 00000028

Symbol: PendSV_Handler
   Definitions
      At line 62 in file OSasm.s
   Uses
      At line 30 in file OSasm.s
Comment: PendSV_Handler used once
SVC_Handler 000000A8

Symbol: SVC_Handler
   Definitions
      At line 130 in file OSasm.s
   Uses
      At line 33 in file OSasm.s
Comment: SVC_Handler used once
StartOS 00000008



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: StartOS
   Definitions
      At line 47 in file OSasm.s
   Uses
      At line 32 in file OSasm.s
Comment: StartOS used once
Switch_Routine 0000005A

Symbol: Switch_Routine
   Definitions
      At line 87 in file OSasm.s
   Uses
      At line 73 in file OSasm.s
Comment: Switch_Routine used once
SysTick_Handler 00000102

Symbol: SysTick_Handler
   Definitions
      At line 169 in file OSasm.s
   Uses
      At line 31 in file OSasm.s
Comment: SysTick_Handler used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

OS_AddThread 00000000

Symbol: OS_AddThread
   Definitions
      At line 17 in file OSasm.s
   Uses
      At line 160 in file OSasm.s
Comment: OS_AddThread used once
OS_Id 00000000

Symbol: OS_Id
   Definitions
      At line 13 in file OSasm.s
   Uses
      At line 148 in file OSasm.s
Comment: OS_Id used once
OS_Kill 00000000

Symbol: OS_Kill
   Definitions
      At line 14 in file OSasm.s
   Uses
      At line 151 in file OSasm.s
Comment: OS_Kill used once
OS_Sleep 00000000

Symbol: OS_Sleep
   Definitions
      At line 15 in file OSasm.s
   Uses
      At line 154 in file OSasm.s
Comment: OS_Sleep used once
OS_Time 00000000

Symbol: OS_Time
   Definitions
      At line 16 in file OSasm.s
   Uses
      At line 157 in file OSasm.s
Comment: OS_Time used once
RunPt 00000000

Symbol: RunPt
   Definitions
      At line 19 in file OSasm.s
   Uses
      At line 48 in file OSasm.s
      At line 65 in file OSasm.s
      At line 102 in file OSasm.s

SchedulerPt 00000000

Symbol: SchedulerPt
   Definitions
      At line 25 in file OSasm.s
   Uses
      At line 82 in file OSasm.s
Comment: SchedulerPt used once
currentProcess 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: currentProcess
   Definitions
      At line 27 in file OSasm.s
   Uses
      At line 110 in file OSasm.s
Comment: currentProcess used once
getNewR9 00000000

Symbol: getNewR9
   Definitions
      At line 26 in file OSasm.s
   Uses
      At line 121 in file OSasm.s
Comment: getNewR9 used once
getProcessIdOfRunningThread 00000000

Symbol: getProcessIdOfRunningThread
   Definitions
      At line 23 in file OSasm.s
   Uses
      At line 106 in file OSasm.s
Comment: getProcessIdOfRunningThread used once
higherPriorityAdded 00000000

Symbol: higherPriorityAdded
   Definitions
      At line 24 in file OSasm.s
   Uses
      At line 74 in file OSasm.s
Comment: higherPriorityAdded used once
nextBeforeSwitch 00000000

Symbol: nextBeforeSwitch
   Definitions
      At line 22 in file OSasm.s
   Uses
      At line 90 in file OSasm.s
Comment: nextBeforeSwitch used once
processPool 00000000

Symbol: processPool
   Definitions
      At line 18 in file OSasm.s
   Uses
      None
Comment: processPool unused
switched 00000000

Symbol: switched
   Definitions
      At line 21 in file OSasm.s
   Uses
      At line 70 in file OSasm.s
Comment: switched used once
traverseSleep 00000000

Symbol: traverseSleep
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 20 in file OSasm.s
   Uses
      At line 178 in file OSasm.s
Comment: traverseSleep used once
15 symbols
364 symbols in table
